docker container run -p 80:80 --name webhost -d nginx
docker container post webhost
// format -> format the outputs of command using go templates
docker container inspect --format "{{ .NetworkSettings.IPAddress }}" webhost
ifconfig en0 //different ip compared to mac
//docker flow and firewalls -> how docker newtworks moves packet in and out

docker network ls
// network bridge -> default docker virtual network, which is NAT'ed behind the Host IP
docker network inspect bridge

// --netwrok host -> it gains performance by skipping virtual networks but sacrifices security of container model

// --netwrok none -> removes eth0 and only leaves you with localhost interface in containers

docker netwrok create my_app_net
docker network ls

// network driver -> built in or 3rd party extension that gives you virtual network feeatures

docker container run -d --name new_nginx --network my_app_net nginx
docker network inspect my_app_net
docker network connect <my_app_net id> <container id>

docker container inspect <contianer id>
// coneected to two networks

docker network disconnect <my_app_net id> <container id>
docker container inspect <contianer id>

// docker dns -> docker daemon has a bulit in dns server that containers use by default

docker container run -d --name my_nginx --network my_app_net nginx

docker network inspect my_app_net
// should see two netowrks ny_nginx and new_nginx

dokcer continer exec -it my_nginx pings new_nginx

// dns is used because if we stop containers and then start them again their ip address might be different


